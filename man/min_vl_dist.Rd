% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{min_vl_dist}
\alias{min_vl_dist}
\title{Get minimal voice-leading distance}
\usage{
min_vl_dist(s1, s2, elt_type = "pc", norm = "taxicab",
  preserve_bass = FALSE)
}
\arguments{
\item{s1}{The first set to be compared; numeric vector,
with each number corresponding to either a pitch or a pitch class.
Duplicates are permitted, and they will be retained.
Order does not matter.}

\item{s2}{The second set to be compared; see \code{s1}.}

\item{elt_type}{Can be either \code{pitch} or \code{pc};
determines whether \code{s1} and \code{s2} are interpreted
as pitches or pitch classes.}

\item{norm}{Can be either \code{euclidean}, \code{taxicab},
or \code{infinity}. Each of these identify different norms.}

\item{preserve_bass}{Logical scalar;
if TRUE, the first element of each set is considered to be the bass note,
and the voice leading is constrained to preserve these bass notes.
Only relevant if \code{elt_type == "pc"}.}
}
\value{
A numeric scalar corresponding to the minimal voice-leading distance.
}
\description{
Computes the minimal voice-leading distance between two sets of pitches or pitch classes,
using the polynomial-time algorithm described in Tymoczko (2006).
}
\note{
\code{\link{min_vl}()} is equivalent to \code{\link{min_vl_dist}()}
but also returns the voice leading itself.

\code{\link{min_vl_dists}()} is equivalent to \code{\link{min_vl_dist}()}
but is vectorised over the first argument.
}
\references{
\insertRef{Tymoczko2006}{minVL}
}
